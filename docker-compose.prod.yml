version: "3.9"

services:
  web:
    container_name: ${APP_CONTAINER_NAME:-yuno-app-container}
    build:
      context: ./src
      dockerfile: ./deploy/production/Dockerfile
    command: /start
    restart: unless-stopped
    expose:
      - 8070
    env_file:
      - .env
    depends_on:
      - db
    networks:
      - traefik_net
      - yuno_network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.yuno.rule=Host(`yuno.axelx.ru`)"
      - "traefik.http.routers.yuno.entrypoints=websecure"
      - "traefik.http.routers.yuno.service=yuno"
      - "traefik.http.routers.blog.tls=true"
      - "traefik.http.routers.yuno.tls.certresolver=letsencrypt"
      - "traefik.http.routers.yuno.tls.domains[0].main=yuno.axelx.ru"
      - "traefik.http.routers.yuno.tls.domains[0].sans=*.yuno.axelx.ru"
      - "traefik.http.services.yuno.loadbalancer.server.port=8070"

  db:
    container_name: ${DB_CONTAINER_NAME:-yuno-db-container}
    image: postgres:14-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/sql:/docker-entrypoint-initdb.d
    expose:
      - 5432
    environment:
      - POSTGRES_USER=${DB_USER:?DB_USER variable is not set}
      - POSTGRES_PASSWORD=${DB_PASSWORD:?DB_PASSWORD variable is not set}
      - POSTGRES_DB=${DB_NAME:-db-prod}
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${DB_USER}", "-d", "${DB_NAME}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - yuno_network

  redis-server:
    container_name: ${REDIS_CONTAINER_NAME:-yuno-redis-container}
    image: "redis:alpine"
    command:
      - /bin/sh
      - -c
      # - Double dollars, so that the variable is not expanded by Docker Compose
      # - Surround by quotes, so that the shell does not split the password
      # - The ${variable:?message} syntax causes shell to exit with a non-zero
      #   code and print a message, when the variable is not set or empty
      - redis-server --requirepass "$${REDIS_PASSWORD:?REDIS_PASSWORD variable is not set}"
    restart: unless-stopped
    expose:
      - 6379
    env_file:
      - .env
    environment:
      - ALLOW_EMPTY_PASSWORD=no
    networks:
      - yuno_network

  minio:
    container_name: ${MINIO_CONTAINER_NAME:-yuno-minio-container}
    image: minio/minio:latest
    command: "server /data --console-address ':9001'"
    volumes:
      - ./minio/data:/data
    ports:
      - "9000:9000"
      - "9001:9001"
    env_file:
      - .env
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER:?MINIO_ROOT_USER variable is not set}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD:?MINIO_ROOT_PASSWORD variable is not set}
      MINIO_BROWSER_REDIRECT_URL: http://minio
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
    networks:
      - yuno_network

  celery-worker:
    container_name: ${CELERY_WORKER_CONTAINER_NAME:-yuno-celery-worker-container}
    build:
      context: ./src
      dockerfile: ./deploy/production/Dockerfile
    command: /start-celeryworker
    env_file:
      - .env
    depends_on:
      - redis-server
      - db
    networks:
      - yuno_network

volumes:
  postgres_data:

networks:
  traefik_net:
    external: true
  yuno_network:
