[tool.poetry]
name = "app"
version = "0.2.1"
description = "Task management backend service"
authors = ["8thgencore <8th@example.com>"]

[tool.poetry.dependencies]
# Python version
python = "^3.11"
# FastApi and Extencions
fastapi = { extras = ["all"], version = "^0.108.0" }
fastapi-cache2 = { extras = ["redis"], version = "^0.2.1" }
fastapi-pagination = { extras = ["sqlalchemy"], version = "^0.12.14" }
fastapi-async-sqlalchemy = "^0.6.0"
python-multipart = "^0.0.6"
asyncer = "^0.0.2"
# ASGI server
uvicorn = "^0.25.0"
gunicorn = "^21.2.0"
# Database
sqlmodel = "^0.0.14"
alembic = "^1.12.1"
asyncpg = "^0.29.0"
# For S3
minio = "^7.2.3"
Pillow = "^10.2.0"
# Celery
redis = "^4.6.0"
celery = "^5.3.6"
flower = "^2.0.1"
watchfiles = "^0.21.0"
# Mail
fastapi-mail = "^1.4.1"
# Logger
loguru = "^0.7.2"
# Cryptography
bcrypt = "^4.0.1"
pyjwt = { extras = ["crypto"], version = "^2.8.0" }

[tool.poetry.group.dev.dependencies]
yesqa = "^1.5.0"
httpx = "^0.26.0"
pytest = "^7.4.3"
pytest-asyncio = "^0.23.2"
ruff = "^0.1.11"
interrogate = "^1.5.0"
pre-commit = "^3.6.0"
# mypy
mypy = "^1.7.1"
types-python-dateutil = "^2.8.19.14"
types-redis = "^4.6.0.3"
types-ujson = "^5.8.0.1"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
line-length = 99
exclude = [".git", "__pycache__", ".mypy_cache", ".pytest_cache", "alembic"]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "C",  # flake8-comprehensions
    "B",  # flake8-bugbear
    "UP", # pyupgrade
]
ignore = [
    "B904",
    "B006",
    "E501", # line too long, handled by black
    "E712", # in sqlmodel better used ==
    "B008", # do not perform function calls in argument defaults
    "C901", # too complex
    "W191", # indentation contains tabs
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]

[tool.ruff.isort]
known-third-party = ["fastapi", "pydantic", "starlette"]

[tool.ruff.pyupgrade]
# Preserve types, even if a file imports `from __future__ import annotations`.
keep-runtime-typing = true

[tool.mypy]
plugins = ["pydantic.mypy"]
exclude = ["alembic", "__pycache__"]
warn_return_any = true
warn_unused_configs = true
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "tests.*"
disallow_incomplete_defs = false
disallow_untyped_defs = false

[tool.pydantic-mypy]
init_forbid_extra = true
init_typed = true
warn_required_dynamic_aliases = true
warn_untyped_fields = true

[tool.pytest.ini_options]
pythonpath = [".", "src"]
asyncio_mode = "auto"
