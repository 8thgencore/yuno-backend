"""empty message

Revision ID: 27ef60460a81
Revises: e23b635c926e
Create Date: 2023-01-19 12:51:02.019679

"""
import sqlalchemy as sa
import sqlmodel  # added
from sqlalchemy.dialects import postgresql

from alembic import op

# revision identifiers, used by Alembic.
revision = "27ef60460a81"
down_revision = "e23b635c926e"
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "Task",
        sa.Column("name", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("deadline", sa.DateTime(), nullable=True),
        sa.Column("done", sa.Boolean(), nullable=False),
        sa.Column("project_id", sqlmodel.sql.sqltypes.GUID(), nullable=True),
        sa.Column("id", sqlmodel.sql.sqltypes.GUID(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["project_id"],
            ["Project.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_Task_id"), "Task", ["id"], unique=False)
    op.drop_index("ix_Checklist_id", table_name="Checklist")
    op.drop_table("Checklist")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "Checklist",
        sa.Column("name", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("deadline", postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
        sa.Column("done", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.Column("project_id", postgresql.UUID(), autoincrement=False, nullable=True),
        sa.Column("id", postgresql.UUID(), autoincrement=False, nullable=False),
        sa.Column("updated_at", postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
        sa.Column("created_at", postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
        sa.ForeignKeyConstraint(["project_id"], ["Project.id"], name="Checklist_project_id_fkey"),
        sa.PrimaryKeyConstraint("id", name="Checklist_pkey"),
    )
    op.create_index("ix_Checklist_id", "Checklist", ["id"], unique=False)
    op.drop_index(op.f("ix_Task_id"), table_name="Task")
    op.drop_table("Task")
    # ### end Alembic commands ###
